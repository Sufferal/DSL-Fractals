Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIVIDE
    DOT
    ID
    MINUS
    PLUS
    TIMES

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> statement program
Rule 3     statement -> size_statement
Rule 4     statement -> color_statement
Rule 5     statement -> angle_statement
Rule 6     statement -> iterations_statement
Rule 7     statement -> shape_statement
Rule 8     statement -> move_statement
Rule 9     statement -> scale_statement
Rule 10    statement -> rotate_statement
Rule 11    statement -> mirror_statement
Rule 12    statement -> draw_statement
Rule 13    statement -> save_statement
Rule 14    size_statement -> SIZE NUMBER
Rule 15    color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN
Rule 16    color_statement -> COLOR NUMBER
Rule 17    color_statement -> COLOR QUOTATION STRING QUOTATION
Rule 18    color_statement -> COLOR APOSTROPHE STRING APOSTROPHE
Rule 19    angle_statement -> ANGLE NUMBER
Rule 20    iterations_statement -> ITERATIONS NUMBER
Rule 21    shape_statement -> SHAPE shape
Rule 22    move_statement -> MOVE NUMBER NUMBER
Rule 23    scale_statement -> SCALE NUMBER
Rule 24    rotate_statement -> ROTATE NUMBER
Rule 25    mirror_statement -> MIRROR axis
Rule 26    draw_statement -> DRAW
Rule 27    save_statement -> SAVE STRING
Rule 28    shape -> CIRCLE
Rule 29    shape -> SQUARE
Rule 30    shape -> TRIANGLE
Rule 31    shape -> POLYGON
Rule 32    axis -> X_AXIS
Rule 33    axis -> Y_AXIS

Terminals, with rules where they appear

ANGLE                : 19
APOSTROPHE           : 18 18
CIRCLE               : 28
COLOR                : 15 16 17 18
COMMA                : 15 15 15
DIVIDE               : 
DOT                  : 
DRAW                 : 26
ID                   : 
ITERATIONS           : 20
LPAREN               : 15
MINUS                : 
MIRROR               : 25
MOVE                 : 22
NUMBER               : 14 15 15 15 16 19 20 22 22 23 24
PLUS                 : 
POLYGON              : 31
QUOTATION            : 17 17
ROTATE               : 24
RPAREN               : 15
SAVE                 : 27
SCALE                : 23
SHAPE                : 21
SIZE                 : 14
SQUARE               : 29
STRING               : 17 18 27
TIMES                : 
TRIANGLE             : 30
X_AXIS               : 32
Y_AXIS               : 33
error                : 

Nonterminals, with rules where they appear

angle_statement      : 5
axis                 : 25
color_statement      : 4
draw_statement       : 12
iterations_statement : 6
mirror_statement     : 11
move_statement       : 8
program              : 2 0
rotate_statement     : 10
save_statement       : 13
scale_statement      : 9
shape                : 21
shape_statement      : 7
size_statement       : 3
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . size_statement
    (4) statement -> . color_statement
    (5) statement -> . angle_statement
    (6) statement -> . iterations_statement
    (7) statement -> . shape_statement
    (8) statement -> . move_statement
    (9) statement -> . scale_statement
    (10) statement -> . rotate_statement
    (11) statement -> . mirror_statement
    (12) statement -> . draw_statement
    (13) statement -> . save_statement
    (14) size_statement -> . SIZE NUMBER
    (15) color_statement -> . COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN
    (16) color_statement -> . COLOR NUMBER
    (17) color_statement -> . COLOR QUOTATION STRING QUOTATION
    (18) color_statement -> . COLOR APOSTROPHE STRING APOSTROPHE
    (19) angle_statement -> . ANGLE NUMBER
    (20) iterations_statement -> . ITERATIONS NUMBER
    (21) shape_statement -> . SHAPE shape
    (22) move_statement -> . MOVE NUMBER NUMBER
    (23) scale_statement -> . SCALE NUMBER
    (24) rotate_statement -> . ROTATE NUMBER
    (25) mirror_statement -> . MIRROR axis
    (26) draw_statement -> . DRAW
    (27) save_statement -> . SAVE STRING

    SIZE            shift and go to state 14
    COLOR           shift and go to state 15
    ANGLE           shift and go to state 16
    ITERATIONS      shift and go to state 17
    SHAPE           shift and go to state 18
    MOVE            shift and go to state 19
    SCALE           shift and go to state 20
    ROTATE          shift and go to state 21
    MIRROR          shift and go to state 22
    DRAW            shift and go to state 23
    SAVE            shift and go to state 24

    program                        shift and go to state 1
    statement                      shift and go to state 2
    size_statement                 shift and go to state 3
    color_statement                shift and go to state 4
    angle_statement                shift and go to state 5
    iterations_statement           shift and go to state 6
    shape_statement                shift and go to state 7
    move_statement                 shift and go to state 8
    scale_statement                shift and go to state 9
    rotate_statement               shift and go to state 10
    mirror_statement               shift and go to state 11
    draw_statement                 shift and go to state 12
    save_statement                 shift and go to state 13

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .
    (2) program -> statement . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . size_statement
    (4) statement -> . color_statement
    (5) statement -> . angle_statement
    (6) statement -> . iterations_statement
    (7) statement -> . shape_statement
    (8) statement -> . move_statement
    (9) statement -> . scale_statement
    (10) statement -> . rotate_statement
    (11) statement -> . mirror_statement
    (12) statement -> . draw_statement
    (13) statement -> . save_statement
    (14) size_statement -> . SIZE NUMBER
    (15) color_statement -> . COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN
    (16) color_statement -> . COLOR NUMBER
    (17) color_statement -> . COLOR QUOTATION STRING QUOTATION
    (18) color_statement -> . COLOR APOSTROPHE STRING APOSTROPHE
    (19) angle_statement -> . ANGLE NUMBER
    (20) iterations_statement -> . ITERATIONS NUMBER
    (21) shape_statement -> . SHAPE shape
    (22) move_statement -> . MOVE NUMBER NUMBER
    (23) scale_statement -> . SCALE NUMBER
    (24) rotate_statement -> . ROTATE NUMBER
    (25) mirror_statement -> . MIRROR axis
    (26) draw_statement -> . DRAW
    (27) save_statement -> . SAVE STRING

    $end            reduce using rule 1 (program -> statement .)
    SIZE            shift and go to state 14
    COLOR           shift and go to state 15
    ANGLE           shift and go to state 16
    ITERATIONS      shift and go to state 17
    SHAPE           shift and go to state 18
    MOVE            shift and go to state 19
    SCALE           shift and go to state 20
    ROTATE          shift and go to state 21
    MIRROR          shift and go to state 22
    DRAW            shift and go to state 23
    SAVE            shift and go to state 24

    statement                      shift and go to state 2
    program                        shift and go to state 25
    size_statement                 shift and go to state 3
    color_statement                shift and go to state 4
    angle_statement                shift and go to state 5
    iterations_statement           shift and go to state 6
    shape_statement                shift and go to state 7
    move_statement                 shift and go to state 8
    scale_statement                shift and go to state 9
    rotate_statement               shift and go to state 10
    mirror_statement               shift and go to state 11
    draw_statement                 shift and go to state 12
    save_statement                 shift and go to state 13

state 3

    (3) statement -> size_statement .

    SIZE            reduce using rule 3 (statement -> size_statement .)
    COLOR           reduce using rule 3 (statement -> size_statement .)
    ANGLE           reduce using rule 3 (statement -> size_statement .)
    ITERATIONS      reduce using rule 3 (statement -> size_statement .)
    SHAPE           reduce using rule 3 (statement -> size_statement .)
    MOVE            reduce using rule 3 (statement -> size_statement .)
    SCALE           reduce using rule 3 (statement -> size_statement .)
    ROTATE          reduce using rule 3 (statement -> size_statement .)
    MIRROR          reduce using rule 3 (statement -> size_statement .)
    DRAW            reduce using rule 3 (statement -> size_statement .)
    SAVE            reduce using rule 3 (statement -> size_statement .)
    $end            reduce using rule 3 (statement -> size_statement .)


state 4

    (4) statement -> color_statement .

    SIZE            reduce using rule 4 (statement -> color_statement .)
    COLOR           reduce using rule 4 (statement -> color_statement .)
    ANGLE           reduce using rule 4 (statement -> color_statement .)
    ITERATIONS      reduce using rule 4 (statement -> color_statement .)
    SHAPE           reduce using rule 4 (statement -> color_statement .)
    MOVE            reduce using rule 4 (statement -> color_statement .)
    SCALE           reduce using rule 4 (statement -> color_statement .)
    ROTATE          reduce using rule 4 (statement -> color_statement .)
    MIRROR          reduce using rule 4 (statement -> color_statement .)
    DRAW            reduce using rule 4 (statement -> color_statement .)
    SAVE            reduce using rule 4 (statement -> color_statement .)
    $end            reduce using rule 4 (statement -> color_statement .)


state 5

    (5) statement -> angle_statement .

    SIZE            reduce using rule 5 (statement -> angle_statement .)
    COLOR           reduce using rule 5 (statement -> angle_statement .)
    ANGLE           reduce using rule 5 (statement -> angle_statement .)
    ITERATIONS      reduce using rule 5 (statement -> angle_statement .)
    SHAPE           reduce using rule 5 (statement -> angle_statement .)
    MOVE            reduce using rule 5 (statement -> angle_statement .)
    SCALE           reduce using rule 5 (statement -> angle_statement .)
    ROTATE          reduce using rule 5 (statement -> angle_statement .)
    MIRROR          reduce using rule 5 (statement -> angle_statement .)
    DRAW            reduce using rule 5 (statement -> angle_statement .)
    SAVE            reduce using rule 5 (statement -> angle_statement .)
    $end            reduce using rule 5 (statement -> angle_statement .)


state 6

    (6) statement -> iterations_statement .

    SIZE            reduce using rule 6 (statement -> iterations_statement .)
    COLOR           reduce using rule 6 (statement -> iterations_statement .)
    ANGLE           reduce using rule 6 (statement -> iterations_statement .)
    ITERATIONS      reduce using rule 6 (statement -> iterations_statement .)
    SHAPE           reduce using rule 6 (statement -> iterations_statement .)
    MOVE            reduce using rule 6 (statement -> iterations_statement .)
    SCALE           reduce using rule 6 (statement -> iterations_statement .)
    ROTATE          reduce using rule 6 (statement -> iterations_statement .)
    MIRROR          reduce using rule 6 (statement -> iterations_statement .)
    DRAW            reduce using rule 6 (statement -> iterations_statement .)
    SAVE            reduce using rule 6 (statement -> iterations_statement .)
    $end            reduce using rule 6 (statement -> iterations_statement .)


state 7

    (7) statement -> shape_statement .

    SIZE            reduce using rule 7 (statement -> shape_statement .)
    COLOR           reduce using rule 7 (statement -> shape_statement .)
    ANGLE           reduce using rule 7 (statement -> shape_statement .)
    ITERATIONS      reduce using rule 7 (statement -> shape_statement .)
    SHAPE           reduce using rule 7 (statement -> shape_statement .)
    MOVE            reduce using rule 7 (statement -> shape_statement .)
    SCALE           reduce using rule 7 (statement -> shape_statement .)
    ROTATE          reduce using rule 7 (statement -> shape_statement .)
    MIRROR          reduce using rule 7 (statement -> shape_statement .)
    DRAW            reduce using rule 7 (statement -> shape_statement .)
    SAVE            reduce using rule 7 (statement -> shape_statement .)
    $end            reduce using rule 7 (statement -> shape_statement .)


state 8

    (8) statement -> move_statement .

    SIZE            reduce using rule 8 (statement -> move_statement .)
    COLOR           reduce using rule 8 (statement -> move_statement .)
    ANGLE           reduce using rule 8 (statement -> move_statement .)
    ITERATIONS      reduce using rule 8 (statement -> move_statement .)
    SHAPE           reduce using rule 8 (statement -> move_statement .)
    MOVE            reduce using rule 8 (statement -> move_statement .)
    SCALE           reduce using rule 8 (statement -> move_statement .)
    ROTATE          reduce using rule 8 (statement -> move_statement .)
    MIRROR          reduce using rule 8 (statement -> move_statement .)
    DRAW            reduce using rule 8 (statement -> move_statement .)
    SAVE            reduce using rule 8 (statement -> move_statement .)
    $end            reduce using rule 8 (statement -> move_statement .)


state 9

    (9) statement -> scale_statement .

    SIZE            reduce using rule 9 (statement -> scale_statement .)
    COLOR           reduce using rule 9 (statement -> scale_statement .)
    ANGLE           reduce using rule 9 (statement -> scale_statement .)
    ITERATIONS      reduce using rule 9 (statement -> scale_statement .)
    SHAPE           reduce using rule 9 (statement -> scale_statement .)
    MOVE            reduce using rule 9 (statement -> scale_statement .)
    SCALE           reduce using rule 9 (statement -> scale_statement .)
    ROTATE          reduce using rule 9 (statement -> scale_statement .)
    MIRROR          reduce using rule 9 (statement -> scale_statement .)
    DRAW            reduce using rule 9 (statement -> scale_statement .)
    SAVE            reduce using rule 9 (statement -> scale_statement .)
    $end            reduce using rule 9 (statement -> scale_statement .)


state 10

    (10) statement -> rotate_statement .

    SIZE            reduce using rule 10 (statement -> rotate_statement .)
    COLOR           reduce using rule 10 (statement -> rotate_statement .)
    ANGLE           reduce using rule 10 (statement -> rotate_statement .)
    ITERATIONS      reduce using rule 10 (statement -> rotate_statement .)
    SHAPE           reduce using rule 10 (statement -> rotate_statement .)
    MOVE            reduce using rule 10 (statement -> rotate_statement .)
    SCALE           reduce using rule 10 (statement -> rotate_statement .)
    ROTATE          reduce using rule 10 (statement -> rotate_statement .)
    MIRROR          reduce using rule 10 (statement -> rotate_statement .)
    DRAW            reduce using rule 10 (statement -> rotate_statement .)
    SAVE            reduce using rule 10 (statement -> rotate_statement .)
    $end            reduce using rule 10 (statement -> rotate_statement .)


state 11

    (11) statement -> mirror_statement .

    SIZE            reduce using rule 11 (statement -> mirror_statement .)
    COLOR           reduce using rule 11 (statement -> mirror_statement .)
    ANGLE           reduce using rule 11 (statement -> mirror_statement .)
    ITERATIONS      reduce using rule 11 (statement -> mirror_statement .)
    SHAPE           reduce using rule 11 (statement -> mirror_statement .)
    MOVE            reduce using rule 11 (statement -> mirror_statement .)
    SCALE           reduce using rule 11 (statement -> mirror_statement .)
    ROTATE          reduce using rule 11 (statement -> mirror_statement .)
    MIRROR          reduce using rule 11 (statement -> mirror_statement .)
    DRAW            reduce using rule 11 (statement -> mirror_statement .)
    SAVE            reduce using rule 11 (statement -> mirror_statement .)
    $end            reduce using rule 11 (statement -> mirror_statement .)


state 12

    (12) statement -> draw_statement .

    SIZE            reduce using rule 12 (statement -> draw_statement .)
    COLOR           reduce using rule 12 (statement -> draw_statement .)
    ANGLE           reduce using rule 12 (statement -> draw_statement .)
    ITERATIONS      reduce using rule 12 (statement -> draw_statement .)
    SHAPE           reduce using rule 12 (statement -> draw_statement .)
    MOVE            reduce using rule 12 (statement -> draw_statement .)
    SCALE           reduce using rule 12 (statement -> draw_statement .)
    ROTATE          reduce using rule 12 (statement -> draw_statement .)
    MIRROR          reduce using rule 12 (statement -> draw_statement .)
    DRAW            reduce using rule 12 (statement -> draw_statement .)
    SAVE            reduce using rule 12 (statement -> draw_statement .)
    $end            reduce using rule 12 (statement -> draw_statement .)


state 13

    (13) statement -> save_statement .

    SIZE            reduce using rule 13 (statement -> save_statement .)
    COLOR           reduce using rule 13 (statement -> save_statement .)
    ANGLE           reduce using rule 13 (statement -> save_statement .)
    ITERATIONS      reduce using rule 13 (statement -> save_statement .)
    SHAPE           reduce using rule 13 (statement -> save_statement .)
    MOVE            reduce using rule 13 (statement -> save_statement .)
    SCALE           reduce using rule 13 (statement -> save_statement .)
    ROTATE          reduce using rule 13 (statement -> save_statement .)
    MIRROR          reduce using rule 13 (statement -> save_statement .)
    DRAW            reduce using rule 13 (statement -> save_statement .)
    SAVE            reduce using rule 13 (statement -> save_statement .)
    $end            reduce using rule 13 (statement -> save_statement .)


state 14

    (14) size_statement -> SIZE . NUMBER

    NUMBER          shift and go to state 26


state 15

    (15) color_statement -> COLOR . LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN
    (16) color_statement -> COLOR . NUMBER
    (17) color_statement -> COLOR . QUOTATION STRING QUOTATION
    (18) color_statement -> COLOR . APOSTROPHE STRING APOSTROPHE

    LPAREN          shift and go to state 27
    NUMBER          shift and go to state 28
    QUOTATION       shift and go to state 29
    APOSTROPHE      shift and go to state 30


state 16

    (19) angle_statement -> ANGLE . NUMBER

    NUMBER          shift and go to state 31


state 17

    (20) iterations_statement -> ITERATIONS . NUMBER

    NUMBER          shift and go to state 32


state 18

    (21) shape_statement -> SHAPE . shape
    (28) shape -> . CIRCLE
    (29) shape -> . SQUARE
    (30) shape -> . TRIANGLE
    (31) shape -> . POLYGON

    CIRCLE          shift and go to state 34
    SQUARE          shift and go to state 35
    TRIANGLE        shift and go to state 36
    POLYGON         shift and go to state 37

    shape                          shift and go to state 33

state 19

    (22) move_statement -> MOVE . NUMBER NUMBER

    NUMBER          shift and go to state 38


state 20

    (23) scale_statement -> SCALE . NUMBER

    NUMBER          shift and go to state 39


state 21

    (24) rotate_statement -> ROTATE . NUMBER

    NUMBER          shift and go to state 40


state 22

    (25) mirror_statement -> MIRROR . axis
    (32) axis -> . X_AXIS
    (33) axis -> . Y_AXIS

    X_AXIS          shift and go to state 42
    Y_AXIS          shift and go to state 43

    axis                           shift and go to state 41

state 23

    (26) draw_statement -> DRAW .

    SIZE            reduce using rule 26 (draw_statement -> DRAW .)
    COLOR           reduce using rule 26 (draw_statement -> DRAW .)
    ANGLE           reduce using rule 26 (draw_statement -> DRAW .)
    ITERATIONS      reduce using rule 26 (draw_statement -> DRAW .)
    SHAPE           reduce using rule 26 (draw_statement -> DRAW .)
    MOVE            reduce using rule 26 (draw_statement -> DRAW .)
    SCALE           reduce using rule 26 (draw_statement -> DRAW .)
    ROTATE          reduce using rule 26 (draw_statement -> DRAW .)
    MIRROR          reduce using rule 26 (draw_statement -> DRAW .)
    DRAW            reduce using rule 26 (draw_statement -> DRAW .)
    SAVE            reduce using rule 26 (draw_statement -> DRAW .)
    $end            reduce using rule 26 (draw_statement -> DRAW .)


state 24

    (27) save_statement -> SAVE . STRING

    STRING          shift and go to state 44


state 25

    (2) program -> statement program .

    $end            reduce using rule 2 (program -> statement program .)


state 26

    (14) size_statement -> SIZE NUMBER .

    SIZE            reduce using rule 14 (size_statement -> SIZE NUMBER .)
    COLOR           reduce using rule 14 (size_statement -> SIZE NUMBER .)
    ANGLE           reduce using rule 14 (size_statement -> SIZE NUMBER .)
    ITERATIONS      reduce using rule 14 (size_statement -> SIZE NUMBER .)
    SHAPE           reduce using rule 14 (size_statement -> SIZE NUMBER .)
    MOVE            reduce using rule 14 (size_statement -> SIZE NUMBER .)
    SCALE           reduce using rule 14 (size_statement -> SIZE NUMBER .)
    ROTATE          reduce using rule 14 (size_statement -> SIZE NUMBER .)
    MIRROR          reduce using rule 14 (size_statement -> SIZE NUMBER .)
    DRAW            reduce using rule 14 (size_statement -> SIZE NUMBER .)
    SAVE            reduce using rule 14 (size_statement -> SIZE NUMBER .)
    $end            reduce using rule 14 (size_statement -> SIZE NUMBER .)


state 27

    (15) color_statement -> COLOR LPAREN . NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN

    NUMBER          shift and go to state 45


state 28

    (16) color_statement -> COLOR NUMBER .

    SIZE            reduce using rule 16 (color_statement -> COLOR NUMBER .)
    COLOR           reduce using rule 16 (color_statement -> COLOR NUMBER .)
    ANGLE           reduce using rule 16 (color_statement -> COLOR NUMBER .)
    ITERATIONS      reduce using rule 16 (color_statement -> COLOR NUMBER .)
    SHAPE           reduce using rule 16 (color_statement -> COLOR NUMBER .)
    MOVE            reduce using rule 16 (color_statement -> COLOR NUMBER .)
    SCALE           reduce using rule 16 (color_statement -> COLOR NUMBER .)
    ROTATE          reduce using rule 16 (color_statement -> COLOR NUMBER .)
    MIRROR          reduce using rule 16 (color_statement -> COLOR NUMBER .)
    DRAW            reduce using rule 16 (color_statement -> COLOR NUMBER .)
    SAVE            reduce using rule 16 (color_statement -> COLOR NUMBER .)
    $end            reduce using rule 16 (color_statement -> COLOR NUMBER .)


state 29

    (17) color_statement -> COLOR QUOTATION . STRING QUOTATION

    STRING          shift and go to state 46


state 30

    (18) color_statement -> COLOR APOSTROPHE . STRING APOSTROPHE

    STRING          shift and go to state 47


state 31

    (19) angle_statement -> ANGLE NUMBER .

    SIZE            reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    COLOR           reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    ANGLE           reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    ITERATIONS      reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    SHAPE           reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    MOVE            reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    SCALE           reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    ROTATE          reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    MIRROR          reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    DRAW            reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    SAVE            reduce using rule 19 (angle_statement -> ANGLE NUMBER .)
    $end            reduce using rule 19 (angle_statement -> ANGLE NUMBER .)


state 32

    (20) iterations_statement -> ITERATIONS NUMBER .

    SIZE            reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    COLOR           reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    ANGLE           reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    ITERATIONS      reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    SHAPE           reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    MOVE            reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    SCALE           reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    ROTATE          reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    MIRROR          reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    DRAW            reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    SAVE            reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)
    $end            reduce using rule 20 (iterations_statement -> ITERATIONS NUMBER .)


state 33

    (21) shape_statement -> SHAPE shape .

    SIZE            reduce using rule 21 (shape_statement -> SHAPE shape .)
    COLOR           reduce using rule 21 (shape_statement -> SHAPE shape .)
    ANGLE           reduce using rule 21 (shape_statement -> SHAPE shape .)
    ITERATIONS      reduce using rule 21 (shape_statement -> SHAPE shape .)
    SHAPE           reduce using rule 21 (shape_statement -> SHAPE shape .)
    MOVE            reduce using rule 21 (shape_statement -> SHAPE shape .)
    SCALE           reduce using rule 21 (shape_statement -> SHAPE shape .)
    ROTATE          reduce using rule 21 (shape_statement -> SHAPE shape .)
    MIRROR          reduce using rule 21 (shape_statement -> SHAPE shape .)
    DRAW            reduce using rule 21 (shape_statement -> SHAPE shape .)
    SAVE            reduce using rule 21 (shape_statement -> SHAPE shape .)
    $end            reduce using rule 21 (shape_statement -> SHAPE shape .)


state 34

    (28) shape -> CIRCLE .

    SIZE            reduce using rule 28 (shape -> CIRCLE .)
    COLOR           reduce using rule 28 (shape -> CIRCLE .)
    ANGLE           reduce using rule 28 (shape -> CIRCLE .)
    ITERATIONS      reduce using rule 28 (shape -> CIRCLE .)
    SHAPE           reduce using rule 28 (shape -> CIRCLE .)
    MOVE            reduce using rule 28 (shape -> CIRCLE .)
    SCALE           reduce using rule 28 (shape -> CIRCLE .)
    ROTATE          reduce using rule 28 (shape -> CIRCLE .)
    MIRROR          reduce using rule 28 (shape -> CIRCLE .)
    DRAW            reduce using rule 28 (shape -> CIRCLE .)
    SAVE            reduce using rule 28 (shape -> CIRCLE .)
    $end            reduce using rule 28 (shape -> CIRCLE .)


state 35

    (29) shape -> SQUARE .

    SIZE            reduce using rule 29 (shape -> SQUARE .)
    COLOR           reduce using rule 29 (shape -> SQUARE .)
    ANGLE           reduce using rule 29 (shape -> SQUARE .)
    ITERATIONS      reduce using rule 29 (shape -> SQUARE .)
    SHAPE           reduce using rule 29 (shape -> SQUARE .)
    MOVE            reduce using rule 29 (shape -> SQUARE .)
    SCALE           reduce using rule 29 (shape -> SQUARE .)
    ROTATE          reduce using rule 29 (shape -> SQUARE .)
    MIRROR          reduce using rule 29 (shape -> SQUARE .)
    DRAW            reduce using rule 29 (shape -> SQUARE .)
    SAVE            reduce using rule 29 (shape -> SQUARE .)
    $end            reduce using rule 29 (shape -> SQUARE .)


state 36

    (30) shape -> TRIANGLE .

    SIZE            reduce using rule 30 (shape -> TRIANGLE .)
    COLOR           reduce using rule 30 (shape -> TRIANGLE .)
    ANGLE           reduce using rule 30 (shape -> TRIANGLE .)
    ITERATIONS      reduce using rule 30 (shape -> TRIANGLE .)
    SHAPE           reduce using rule 30 (shape -> TRIANGLE .)
    MOVE            reduce using rule 30 (shape -> TRIANGLE .)
    SCALE           reduce using rule 30 (shape -> TRIANGLE .)
    ROTATE          reduce using rule 30 (shape -> TRIANGLE .)
    MIRROR          reduce using rule 30 (shape -> TRIANGLE .)
    DRAW            reduce using rule 30 (shape -> TRIANGLE .)
    SAVE            reduce using rule 30 (shape -> TRIANGLE .)
    $end            reduce using rule 30 (shape -> TRIANGLE .)


state 37

    (31) shape -> POLYGON .

    SIZE            reduce using rule 31 (shape -> POLYGON .)
    COLOR           reduce using rule 31 (shape -> POLYGON .)
    ANGLE           reduce using rule 31 (shape -> POLYGON .)
    ITERATIONS      reduce using rule 31 (shape -> POLYGON .)
    SHAPE           reduce using rule 31 (shape -> POLYGON .)
    MOVE            reduce using rule 31 (shape -> POLYGON .)
    SCALE           reduce using rule 31 (shape -> POLYGON .)
    ROTATE          reduce using rule 31 (shape -> POLYGON .)
    MIRROR          reduce using rule 31 (shape -> POLYGON .)
    DRAW            reduce using rule 31 (shape -> POLYGON .)
    SAVE            reduce using rule 31 (shape -> POLYGON .)
    $end            reduce using rule 31 (shape -> POLYGON .)


state 38

    (22) move_statement -> MOVE NUMBER . NUMBER

    NUMBER          shift and go to state 48


state 39

    (23) scale_statement -> SCALE NUMBER .

    SIZE            reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    COLOR           reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    ANGLE           reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    ITERATIONS      reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    SHAPE           reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    MOVE            reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    SCALE           reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    ROTATE          reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    MIRROR          reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    DRAW            reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    SAVE            reduce using rule 23 (scale_statement -> SCALE NUMBER .)
    $end            reduce using rule 23 (scale_statement -> SCALE NUMBER .)


state 40

    (24) rotate_statement -> ROTATE NUMBER .

    SIZE            reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    COLOR           reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    ANGLE           reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    ITERATIONS      reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    SHAPE           reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    MOVE            reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    SCALE           reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    ROTATE          reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    MIRROR          reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    DRAW            reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    SAVE            reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)
    $end            reduce using rule 24 (rotate_statement -> ROTATE NUMBER .)


state 41

    (25) mirror_statement -> MIRROR axis .

    SIZE            reduce using rule 25 (mirror_statement -> MIRROR axis .)
    COLOR           reduce using rule 25 (mirror_statement -> MIRROR axis .)
    ANGLE           reduce using rule 25 (mirror_statement -> MIRROR axis .)
    ITERATIONS      reduce using rule 25 (mirror_statement -> MIRROR axis .)
    SHAPE           reduce using rule 25 (mirror_statement -> MIRROR axis .)
    MOVE            reduce using rule 25 (mirror_statement -> MIRROR axis .)
    SCALE           reduce using rule 25 (mirror_statement -> MIRROR axis .)
    ROTATE          reduce using rule 25 (mirror_statement -> MIRROR axis .)
    MIRROR          reduce using rule 25 (mirror_statement -> MIRROR axis .)
    DRAW            reduce using rule 25 (mirror_statement -> MIRROR axis .)
    SAVE            reduce using rule 25 (mirror_statement -> MIRROR axis .)
    $end            reduce using rule 25 (mirror_statement -> MIRROR axis .)


state 42

    (32) axis -> X_AXIS .

    SIZE            reduce using rule 32 (axis -> X_AXIS .)
    COLOR           reduce using rule 32 (axis -> X_AXIS .)
    ANGLE           reduce using rule 32 (axis -> X_AXIS .)
    ITERATIONS      reduce using rule 32 (axis -> X_AXIS .)
    SHAPE           reduce using rule 32 (axis -> X_AXIS .)
    MOVE            reduce using rule 32 (axis -> X_AXIS .)
    SCALE           reduce using rule 32 (axis -> X_AXIS .)
    ROTATE          reduce using rule 32 (axis -> X_AXIS .)
    MIRROR          reduce using rule 32 (axis -> X_AXIS .)
    DRAW            reduce using rule 32 (axis -> X_AXIS .)
    SAVE            reduce using rule 32 (axis -> X_AXIS .)
    $end            reduce using rule 32 (axis -> X_AXIS .)


state 43

    (33) axis -> Y_AXIS .

    SIZE            reduce using rule 33 (axis -> Y_AXIS .)
    COLOR           reduce using rule 33 (axis -> Y_AXIS .)
    ANGLE           reduce using rule 33 (axis -> Y_AXIS .)
    ITERATIONS      reduce using rule 33 (axis -> Y_AXIS .)
    SHAPE           reduce using rule 33 (axis -> Y_AXIS .)
    MOVE            reduce using rule 33 (axis -> Y_AXIS .)
    SCALE           reduce using rule 33 (axis -> Y_AXIS .)
    ROTATE          reduce using rule 33 (axis -> Y_AXIS .)
    MIRROR          reduce using rule 33 (axis -> Y_AXIS .)
    DRAW            reduce using rule 33 (axis -> Y_AXIS .)
    SAVE            reduce using rule 33 (axis -> Y_AXIS .)
    $end            reduce using rule 33 (axis -> Y_AXIS .)


state 44

    (27) save_statement -> SAVE STRING .

    SIZE            reduce using rule 27 (save_statement -> SAVE STRING .)
    COLOR           reduce using rule 27 (save_statement -> SAVE STRING .)
    ANGLE           reduce using rule 27 (save_statement -> SAVE STRING .)
    ITERATIONS      reduce using rule 27 (save_statement -> SAVE STRING .)
    SHAPE           reduce using rule 27 (save_statement -> SAVE STRING .)
    MOVE            reduce using rule 27 (save_statement -> SAVE STRING .)
    SCALE           reduce using rule 27 (save_statement -> SAVE STRING .)
    ROTATE          reduce using rule 27 (save_statement -> SAVE STRING .)
    MIRROR          reduce using rule 27 (save_statement -> SAVE STRING .)
    DRAW            reduce using rule 27 (save_statement -> SAVE STRING .)
    SAVE            reduce using rule 27 (save_statement -> SAVE STRING .)
    $end            reduce using rule 27 (save_statement -> SAVE STRING .)


state 45

    (15) color_statement -> COLOR LPAREN NUMBER . COMMA NUMBER COMMA NUMBER COMMA RPAREN

    COMMA           shift and go to state 49


state 46

    (17) color_statement -> COLOR QUOTATION STRING . QUOTATION

    QUOTATION       shift and go to state 50


state 47

    (18) color_statement -> COLOR APOSTROPHE STRING . APOSTROPHE

    APOSTROPHE      shift and go to state 51


state 48

    (22) move_statement -> MOVE NUMBER NUMBER .

    SIZE            reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    COLOR           reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    ANGLE           reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    ITERATIONS      reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    SHAPE           reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    MOVE            reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    SCALE           reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    ROTATE          reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    MIRROR          reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    DRAW            reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    SAVE            reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)
    $end            reduce using rule 22 (move_statement -> MOVE NUMBER NUMBER .)


state 49

    (15) color_statement -> COLOR LPAREN NUMBER COMMA . NUMBER COMMA NUMBER COMMA RPAREN

    NUMBER          shift and go to state 52


state 50

    (17) color_statement -> COLOR QUOTATION STRING QUOTATION .

    SIZE            reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    COLOR           reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    ANGLE           reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    ITERATIONS      reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    SHAPE           reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    MOVE            reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    SCALE           reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    ROTATE          reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    MIRROR          reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    DRAW            reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    SAVE            reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)
    $end            reduce using rule 17 (color_statement -> COLOR QUOTATION STRING QUOTATION .)


state 51

    (18) color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .

    SIZE            reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    COLOR           reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    ANGLE           reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    ITERATIONS      reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    SHAPE           reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    MOVE            reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    SCALE           reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    ROTATE          reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    MIRROR          reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    DRAW            reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    SAVE            reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)
    $end            reduce using rule 18 (color_statement -> COLOR APOSTROPHE STRING APOSTROPHE .)


state 52

    (15) color_statement -> COLOR LPAREN NUMBER COMMA NUMBER . COMMA NUMBER COMMA RPAREN

    COMMA           shift and go to state 53


state 53

    (15) color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA . NUMBER COMMA RPAREN

    NUMBER          shift and go to state 54


state 54

    (15) color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER . COMMA RPAREN

    COMMA           shift and go to state 55


state 55

    (15) color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA . RPAREN

    RPAREN          shift and go to state 56


state 56

    (15) color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .

    SIZE            reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    COLOR           reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    ANGLE           reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    ITERATIONS      reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    SHAPE           reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    MOVE            reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    SCALE           reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    ROTATE          reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    MIRROR          reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    DRAW            reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    SAVE            reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)
    $end            reduce using rule 15 (color_statement -> COLOR LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA RPAREN .)

